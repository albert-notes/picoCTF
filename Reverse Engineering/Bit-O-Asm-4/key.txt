The assembly code:

<+0>:     endbr64
<+4>:     push   rbp
<+5>:     mov    rbp,rsp
<+8>:     mov    DWORD PTR [rbp-0x14],edi
<+11>:    mov    QWORD PTR [rbp-0x20],rsi
<+15>:    mov    DWORD PTR [rbp-0x4],0x9fe1a
<+22>:    cmp    DWORD PTR [rbp-0x4],0x2710
<+29>:    jle    0x55555555514e <main+37>
<+31>:    sub    DWORD PTR [rbp-0x4],0x65
<+35>:    jmp    0x555555555152 <main+41>
<+37>:    add    DWORD PTR [rbp-0x4],0x65
<+41>:    mov    eax,DWORD PTR [rbp-0x4]
<+44>:    pop    rbp
<+45>:    ret

Look at the <+15> and <+22> line, it compares the value of DWORD PTR [rbp-0x4]=0x9fe1a and 0x2710 using jle, which means <=.
Obviously, the answer is >, so keep going with the code.
Then the value of DWORD PTR [rbp-0x4] is 'subed' by 0x65, so it is 0x9fe1a-0x65.
In the next line, it jmp to <+41> and give the final value for eax.
So the final value of eax is 0x9fe1a-0x65=654773, and the flag is picoCTF{654773}.