It just gives us a netcat, no source code.
So we need to break it through observation.
we can try to encrypt single 'a':
$ nc mercury.picoctf.net 4572
...
I will encrypt whatever you give me: a
Here you go: 10274922694604805819737794081251600250325261139217319940790823535630229419174906558639878791634758292243281644667062473315752819732552765475067429044011699908168691436698248997263888955756199008790816221071605981806033594461754494004581210786043231160404354603960488724958376308028534093942936300015160881062
I will encrypt whatever you give me: a
Here you go: 10274922694604805819737794081251600250325261139217319940790823535630229419174906558639878791634758292243281644667062473315752819732552765475067429044011699908168691436698248997263888955756199008790816221071605981806033594461754494004581210786043231160404354603960488724958376308028534093942936300015160881062
No matter how much we send the same character to it, the outcome is the same.
However, when we enter double characters 'ab':
I will encrypt whatever you give me: ab
Here you go: 1027492269460480581973779408125160025032526113921731994079082353563022941917490655863987879163475829224328164466706247331575281973255276547506742904401169990816869143669824899726388895575619900879081622107160598180603359446175449400458121078604323116040435460396048872495837630802853409394293630001516088106215515648438410911366918086892110836557599787958728475609802605707016588305919392376979709365016674396044892372746723255243471215785346547096941396538044084768272549813900042592466642439546406720954362828394892939833810222613450903306908589577901011652030323155609455136116825176605976046177117400642996358844
I will encrypt whatever you give me: ab
Here you go: 1551564843841091136691808689211083655759978795872847560980260570701658830591939237697970936501667439604489237274672325524347121578534654709694139653804408476827254981390004259246664243954640672095436282839489293983381022261345090330690858957790101165203032315560945513611682517660597604617711740064299635884410274922694604805819737794081251600250325261139217319940790823535630229419174906558639878791634758292243281644667062473315752819732552765475067429044011699908168691436698248997263888955756199008790816221071605981806033594461754494004581210786043231160404354603960488724958376308028534093942936300015160881062
It will have two types, and it's two substrings to combine a new one.
We can even notice that single 'a''s ciphertext is also in it!But 'b' is not.
Try new string 'abc':
I will encrypt whatever you give me: abc
Here you go: 137560563120377819876274303561336227764792577422678118132763791395200393502441923536338325241908013346383814754229405755626941237863042602979007032723394908086618904715818892651229560254135766899534398845635731793478846184218332546236761223005113382710227222016359039761804491469546275006096461794577498336691027492269460480581973779408125160025032526113921731994079082353563022941917490655863987879163475829224328164466706247331575281973255276547506742904401169990816869143669824899726388895575619900879081622107160598180603359446175449400458121078604323116040435460396048872495837630802853409394293630001516088106215515648438410911366918086892110836557599787958728475609802605707016588305919392376979709365016674396044892372746723255243471215785346547096941396538044084768272549813900042592466642439546406720954362828394892939833810222613450903306908589577901011652030323155609455136116825176605976046177117400642996358844
The remainder of 'ab' is in it!So we supposed that a character will be RSA encoded {index} times.
This way, we can write a python code to brute force the flag, since we know the prefix picoCTF{, it will be more easy.
In sol.py.
Get the flag.
picoCTF{bad_1d3a5_3525501}
